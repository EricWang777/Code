Bingtang Wang
8675881382
bingtanw@usc.edu

//Problem 1
Part(a): 1 4 7 8
Part(b): 1 2 3 4 5
Part(C): 2 
Part(d): 3 4

//Problem 2
Part(a): 1 3 
Part(b): 1. git add hw1q2b.cpp
            git commit -m "This is homework"
         2. git log -p -3
       
//Problem 4
Result: in = [5, 1, 1, 1, 1]
Reason: The first three lines in funcB acutally swap
the numbers on in[0] and in[x] and return the value in in[x].
However, what funcA does is to put the return value into in[0], which means
that funcA swap back the in[x] and in[0], and making its return value 
always be in[0]. As a result, when funcA modify the values in "in", it 
intends to rewrite every value in "in" to be the same as in[0] which is 1.
But when it try to modify the first value in[0], n = 0 so funcA jumps over
if condiftion and dierctly ouput in[0], which has been swaped once in funcB.
So this time in[0] = original in[5-1] = 5; 
As a reuslt, in = [5,1,1,1,1].
