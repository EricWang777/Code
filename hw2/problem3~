Part(a)
1. "Do something..." O(1);
2. for (int j = 1; j < i; j *= 2) O(logi);
3. for (int i = 0; i < n; i++) Sigma[form i = 0 to i = n-1](logi) = 
	O(log(n-1)!) = O(log(n^n)) = O(nlogn);
	Run time = O(nlogn);
	
Part(b)
1. "Do something..." O(1);
2. for (int k = j; k < n; k++) Sigma[k = j -> n-1](O(1)) = O(n-j) = O(n)
3. for (int j = 0; j < n; j++) O(n); however, if condition gets triggered 
	by n/i times in this for loop. so it should be O(n/i).
4. for (int i = 1; i < n; i *= 2) O(logn); But for each i, the second for loop
	runs n/i times.
	Sigma[x = 0 -> logn](n/(2^x))*n
